##################################################################
# This is a yaml representation of the contractmodel GTB
# Please notice this model is quite complex and has to have
# all properties that are needed so probable modifications are underway.
##################################################################
Beech:
  CLA:
    'Contract':
      properties:
        'subjectId':
          label: 'Subject id'
          type: '\Beech\Party\Domain\Model\Person'
          validation:
            type: 'NotEmpty'
         'departmentId':
          label: 'Department id'
          type: '\Beech\Party\Domain\Model\Company'
          validation: ''
        'contractVersion':
          label: 'contractversion'
          type: 'string(10)'
          validation:
            -
              type: 'NotEmpty'
            -
              type: 'StringLength'
                maximum: 10
        'contractStatus':
          label: 'Status of the contract'
          type: string(20)
          validation:
            type: 'NotEmpty'
          options:
            values:
              - signed
              - pending
              - rejected
              - draft
        'contractType':
          label: 'Contract type'
          type: string(20)
          validation:
            -
              type: 'NotEmpty'
            -
              type: 'StringLength'
              options:
                maximum: 20
        'firstContract':
          label: 'First contract'
          type: boolean
          validation: ''
        'contractGenerationDate':
          label: 'The date the contract was created'
          type: dateTime
          validation:
            -
              type: 'NotEmpty'
            -
              type: 'RegularExpression'
              options:
                regularExpression: '(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}( \\d{1,2}[:-]\\d{2}([:-]\\d{2,3})*)?'
        'contractAcceptanceDate':
          label: 'Date contract was accepted'
          type: dateTime
          validation:
            type: 'RegularExpression'
            options:
              regularExpression: '(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}( \\d{1,2}[:-]\\d{2}([:-]\\d{2,3})*)?'
        'contractSigned':
          label: 'Contract signed'
          type: boolean
          validation: ''
        'contractSignDate':
          label: 'Date of signing contract'
          type: dateTime
          validation:
            type: 'RegularExpression'
            options:
              regularExpression: '(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}( \\d{1,2}[:-]\\d{2}([:-]\\d{2,3})*)?'
        'contractExpireDate':
          label: 'Expiration date'
          type: dateTime
          validation:
            type: 'RegularExpression'
            options:
             regularExpression: '(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}( \\d{1,2}[:-]\\d{2}([:-]\\d{2,3})*)?'
        'contactStopDate':
          label: 'Date contract is stopped'
          type: dateTime
          validation:
            type: 'RegularExpression'
            options:
              regularExpression: '(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}( \\d{1,2}[:-]\\d{2}([:-]\\d{2,3})*)?'
        'contactStopDateReason':
          label: 'Reason that contract was stopped'
          type:  string(20)
          validation:
          values:
           - stoppedByEmployer
           - stoppedByEmployee
           - Sickness
           - Other
         'contractDocumentId':
          label: 'Id of the document'
          type: string(20)
          validation: ''
        'jobTitle':
          label: Jobtitle
          type: string(30)
          validation:
            type: 'NotEmpty'
        'jobDescription':
          label: 'Jobdescription'
          type: '\Beech\CLA\Domain\Model\jobDescription'
          validation: ''
        'defaultSalaryScale':
          label: defaultSalaryScale
          type: '\Beech\CLA\Domain\Model\jobDescription'
          validation: ''
        'contractEnddate':
          label: 'Expiration date'
          type: dateTime
          validation:
            type: 'RegularExpression'
            options:
              regularExpression: '(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}( \\d{1,2}[:-]\\d{2}([:-]\\d{2,3})*)?'
        'contractStartDate':
          label: 'Startdate of the contract'
          type: dateTime
          validation:
            -
              type: 'NotEmpty'
            -
              type: 'RegularExpression'
              options:
                RegularExpression: '(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}( \\d{1,2}[:-]\\d{2}([:-]\\d{2,3})*)?'
        'streetName':
          label: 'Work address streetname'
          type: string(30)
          validation:
            -
              type: 'NotEmpty'
            -
              type: 'RegularExpression'
              options:
                regularExpression: '[a-zA-Z\\-\\s\\’]{2,30}'
        'houseNumber':
          label: 'Work address House number'
          type: integer(5)
          validation:
            type: 'RegularExpression'
            options:
              regularExpression: '[0-9]{1,5}'
        'houseNumberAddition':
          label: 'Workaddress House number addition'
          type: string(10)
          validation:
            type: 'RegularExpression'
            options:
              regularExpression: [a-zA-Z0-9\\-]{0,10}'
        'postalCodeNL':
          label: 'Postal code'
          type: string(6)
          validation:
            type: 'RegularExpression'
            options:
              regularExpression: '\\d{4}\\s?[a-z]{2}'
        'residence':
          label: Residence
          type: string(30)
          validation:
           type: 'RegularExpression'
           options:
            regularExpression: '[a-zA-Z\\-\\s\\’]{2,30}'
        'country':
          label: Country
          type: string(30)
          validation: ''
        'probation':
          label: probation
          type: boolean
          validation: ''
        'probationInDays':
          label: 'Probation in Days'
          type: integer(2)
          validation: ''
        'totalHours':
          label: 'Total hours of this contract'
          type: decimal(4.2)
          validation:
            type: 'RegularExpression'
            options:
              regularExpression: '^([1-9]\d*(\.|\,)\d*|0?(\.|\,)\d*[1-9]\d*|[1-9]\d*)$'
        'hoursAWeek':
          label: 'Hours a week'
          type: decimal(2.2)
          validation:
            type: 'RegularExpression'
            options:
              regularExpression: '^([1-9]\d*(\.|\,)\d*|0?(\.|\,)\d*[1-9]\d*|[1-9]\d*)$'
        'workRoster':
          type: array
          values:
            'workDays':
              type: string(10)
              label: Workdays
              validation: ''
              options:
                values:
                  - monday
                  - tuesday
                  - wednessday
                  - thursday
                  - friday
                  - saturday
                  - sunday
            'startTime':
              label: Starttime
              type: dateTime
              validation:
                type: 'RegularExpression'
                options:
                  regularExpression: '(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}( \\d{1,2}[:-]\\d{2}([:-]\\d{2,3})*)?'
            'endTime':
              label: Starttime
              type: datetime
              validation:
                type: 'RegularExpression'
                options:
                  regularExpression: '(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}( \\d{1,2}[:-]\\d{2}([:-]\\d{2,3})*)?'
        'hourWage':
          label: 'Hour Wage'
          type: decimal(3.2)
          validation:
            type: 'RegularExpression'
            options:
              regularExpression: '^([1-9]\d*(\.|\,)\d*|0?(\.|\,)\d*[1-9]\d*|[1-9]\d*)$'
        'minimumWage':
          label: 'Minimum wage'
          type: boolean
        'wageScale':
          label: 'wage Scale'
          type: string(2)
          validation: ''
        'currentWageScale':
          label: 'Current wage Scale'
          type: integer(2)
          validation: ''
        'wagestep':
          label: 'Wage step'
          type: integer(2)
          validation: ''
        'currentWageStep':
          label: 'Current Wage Step'
          type: integer(2)
          validation: ''
        'cla':
          label: 'collective labour agreement'
          type: '\Beech\CLA\Domain\Model\LaborAgreement'
          validation: ''
        'vacationAllowanceGLA':
          label: 'Vacation allowance in the GLA arrangment'
          type: decimal(2.2)
          validation:
            type: 'RegularExpression'
            options:
              regularExpression: '^([1-9]\d*(\.|\,)\d*|0?(\.|\,)\d*[1-9]\d*|[1-9]\d*)$'
        'vacationAllowancePercentage':
          label: 'Vacation allowance Percentage'
          type: decimal(2.2)
          validation:
            type: 'RegularExpression'
            options:
              regularExpression: '^([1-9]\d*(\.|\,)\d*|0?(\.|\,)\d*[1-9]\d*|[1-9]\d*)$'
        'sickReportTime':
          label: 'Sickreport time'
          type: dateTime
          validation: ''
        'noticePeriod':
          label: 'Notice period'
          type: boolean
        'generalCompanyRules':
          label: 'General Company Rules Apply'
          type: boolean
        'identification':
          label: 'Identification arrangment'
          type: boolean
        'accomodation':
          label: accomodation
          type: boolean
        'accomodationRentWeek':
          label: 'Acomodation rent for a week'
          type: decimal(3.2)
          validation:
            type: 'RegularExpression'
            options:
              regularExpression: '^([1-9]\d*(\.|\,)\d*|0?(\.|\,)\d*[1-9]\d*|[1-9]\d*)$'
        'accomodationRentMonth':
          label: 'Acomodation rent a month'
          type: decimal(3.2)
          validation:
            type: 'RegularExpression'
            options:
              regularExpression: '^([1-9]\d*(\.|\,)\d*|0?(\.|\,)\d*[1-9]\d*|[1-9]\d*)$'
        'cafetariaModel':
          label: cafetariaModel
          type: boolean
        'articlesInCurrentContract':
          type: array
          validation: ''
        'creationDate':
          default: now
          label: 'creation date'
          required: true
          type: dateTime
          validation:
            type: 'RegularExpression'
            options:
              regularExpression: '(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}( \\d{1,2}[:-]\\d{2}([:-]\\d{2,3})*)?'
          visible: false
        'createdBy':
          default: currentUser
          label: 'Created by'
          required: true
          type: \Beech\Party\Domain\Model\Person
          validation:
            type: 'NotEmpty'
          visible: false