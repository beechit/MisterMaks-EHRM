# contract model.
# todo: make this more generic in future
# and extend this model in customer package if needed.
'Beech.CLA.Domain.Model.Contract':
  properties:
    'employee':
      label: 'Employee'
      type: 'Beech\Party\Domain\Model\Person'
    'departmentId':
      label: 'Department'
      type: 'Beech\Party\Domain\Model\Company'
    'status':
      label: 'Status of the contract'
      type: 'Beech\Ehrm\Domain\Model\Status'
    'contractTemplate':
      label: 'Contract type'
      type: 'Beech\CLA\Domai\Model\ContractTemplate'
    'firstContract':
      label: 'First contract'
      type: 'boolean'
    'contractGenerationDate':
      label: 'The date the contract was created'
      type: 'DateTime'
      validation:
        -
          type: 'NotEmpty'
        -
          type: 'RegularExpression'
          options:
            regularExpression: '(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}( \\d{1,2}[:-]\\d{2}([:-]\\d{2,3})*)?'
    'contractAcceptanceDate':
      label: 'Date contract was accepted'
      type: 'DateTime'
      validation:
        -
          type: 'RegularExpression'
          options:
            regularExpression: '(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}( \\d{1,2}[:-]\\d{2}([:-]\\d{2,3})*)?'
    'contractExpireDate':
      label: 'Expiration date'
      type: 'DateTime'
      validation:
        -
          type: 'RegularExpression'
          options:
            regularExpression: '(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}( \\d{1,2}[:-]\\d{2}([:-]\\d{2,3})*)?'
    'contactStopDate':
      label: 'Date contract is stopped'
      type: 'DateTime'
      validation:
        -
          type: 'RegularExpression'
          options:
            regularExpression: '(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}( \\d{1,2}[:-]\\d{2}([:-]\\d{2,3})*)?'
    'contactStopDateReason':
      label: 'Reason that contract was stopped'
      options:
        values:
          - 'stoppedByEmployer'
          - 'stoppedByEmployee'
          - 'Sickness'
          - 'Other'
      validation:
        -
          type: 'NotEmpty'
        -
          type: 'StringLength'
          options:
            maximum: 20
    'contractDocumentId':
      label: 'Id of the document'
      type: 'Beech\Document\Domain\Model\Document'
    'jobTitle':
      label: 'Jobtitle'
      validation:
        -
          type: 'StringLength'
          options:
            maximum: 30
    'jobDescription':
      label: 'Job description'
      type: 'Beech\CLA\Domain\Model\JobDescription'
    'defaultSalaryScale':
      label: 'defaultSalaryScale'
      type: 'Beech\CLA\'
    'contractEndDate':
      label: 'Expiration date'
      type: 'DateTime'
      validation:
        -
          type: 'DateTimeRange'
          options:
            earliestDate: 20130101
            latestDate: 20500101
    'startDate':
      label: 'Startdate of the contract'
      type: 'DateTime'
      validation:
        -
          type: 'DateTimeRange'
          options:
            earliestDate: 20130101
            latestDate: 20200101
    'streetName':
      label: 'Work address streetname'
      validation:
        -
          type: 'RegularExpression'
          options:
            regularExpression: '[a-zA-Z\\-\\s\\’]{2,30}'
        -
          type: 'StringLength'
          options:
            maximum: 30
    'houseNumber':
      label: 'Work address House number'
      validation:
        -
          type: 'RegularExpression'
          options:
            regularExpression: '[0-9]{1,5}'
        -
          type: 'Integer'
    'houseNumberAddition':
      label: 'Workaddress House number addition'
      validation:
        -
          type: 'RegularExpression'
          options:
            regularExpression: '[a-zA-Z0-9\\-]{0,10}'
        -
          type: 'StringLength'
          options:
          maximum: 10
    'postalCodeNL':
      label: 'Postal code'
      validation:
        -
          type: 'StringLength'
          options:
          maximum: 6
        -
          type: 'RegularExpression'
          options:
            regularExpression: '\\d{4}\\s?[a-z]{2}'
    'residence':
      label: 'Residence'
      validation:
       -
         type: 'RegularExpression'
         options:
           regularExpression: '[a-zA-Z\\-\\s\\’]{2,30}'
       -
         type: 'StringLength'
         options:
          maximum: 30
    'country':
      label: 'Country'
      validation:
        -
         type: 'StringLength'
         options:
          maximum: 30
    'probation':
      label: 'probation'
      type: 'boolean'
    'probationInDays':
      label: 'Probation in Days'
      validation:
        -
          type: 'Integer'
        -
          type: 'Count'
          options:
            minimum: 0
            maximum: 62
      totalHours':
      label: 'Total hours of this contract'
      type: 'Decimal'
      validation:
        -
          type: 'RegularExpression'
          options:
            regularExpression: '^([1-9]\d*(\.|\,)\d*|0?(\.|\,)\d*[1-9]\d*|[1-9]\d*)$'
    'hoursAWeek':
      label: 'Hours a week'
      type: 'Decimal'
      validation:
        -
          type: 'RegularExpression'
          options:
            regularExpression: '^([1-9]\d*(\.|\,)\d*|0?(\.|\,)\d*[1-9]\d*|[1-9]\d*)$'
    'workRoster':
      type: 'array'
      values:
        'workDays':
          label: 'Workdays'
          validation:
            -
              type: 'StringLength'
              options:
                maximum: 15
          options:
            values:
              - 'monday'
              - 'tuesday'
              - 'wednessday'
              - 'thursday'
              - 'friday'
              - 'saturday'
              - 'sunday'
        'startTime':
          label: 'Starttime'
          type: 'DateTime'
        'endTime':
          label: 'EndTime'
          type: 'DateTime'
# we need a custom validator here for time
    'hourWage':
      label: 'Hour Wage'
      type: 'Decimal'
      validation:
        -
          type: 'RegularExpression'
          options:
            regularExpression: '^([1-9]\d*(\.|\,)\d*|0?(\.|\,)\d*[1-9]\d*|[1-9]\d*)$'
    'minimumWage':
      label: 'Minimum wage'
      type: 'boolean'
    'wageScale':
      label: 'wage Scale'
      validation:
        -
          type: 'StringLength'
          options:
            maximum: 3
    'currentWageScale':
      label: 'Current wage Scale'
      validation:
        -
          type: 'Integer'
        -
          type: 'Count'
          options:
           minimum: 0
           maximum: 15
    'wagestep':
      label: 'Wage step'
      validation:
        -
          type: 'Integer'
        -
          type: 'Count'
          options:
            minimum: 0
            maximum: 15
    'currentWageStep':
      label: 'Current Wage Step'
      validation:
        -
          type: 'Integer'
        -
          type: 'Count'
          options:
            minimum: 0
            maximum: 15
    'cla':
      label: 'collective labour agreement'
      type: 'Beech\CLA\Domain\Model\LaborAgreement'
    'vacationAllowanceGLA':
      label: 'Vacation allowance in the GLA arrangment'
      type: 'Decimal'
      validation:
        -
          type: 'RegularExpression'
          options:
            regularExpression: '^([1-9]\d*(\.|\,)\d*|0?(\.|\,)\d*[1-9]\d*|[1-9]\d*)$'
    'vacationAllowancePercentage':
      label: 'Vacation allowance Percentage'
      type: 'Decimal'
      validation:
        -
          type: 'RegularExpression'
          options:
            regularExpression: '^([1-9]\d*(\.|\,)\d*|0?(\.|\,)\d*[1-9]\d*|[1-9]\d*)$'
# todo: add time validator
    'sickReportTime':
      label: 'Sickreport time'
      validation:
        -
          type: 'DateTimeRange'
          options:
            earliestDate: 20130101
            latestDate: 20200101
    'noticePeriod':
      label: 'Notice period'
      type: 'boolean'
    'generalCompanyRules':
      label: 'General Company Rules Apply'
      type: 'boolean'
    'identification':
      label: 'Identification arrangment'
      type: 'boolean'
    'accomodation':
      label: 'accomodation'
      type: 'boolean'
    'accomodationRentWeek':
      label: 'Accomodation rent for a week'
      type: 'Decimal'
      validation:
        -
          type: 'RegularExpression'
          options:
            regularExpression: '^([1-9]\d*(\.|\,)\d*|0?(\.|\,)\d*[1-9]\d*|[1-9]\d*)$'
    'accomodationRentMonth':
      label: 'Acomodation rent a month'
      type: 'Decimal'
      validation:
        -
          type: 'RegularExpression'
          options:
            regularExpression: '^([1-9]\d*(\.|\,)\d*|0?(\.|\,)\d*[1-9]\d*|[1-9]\d*)$'
    'cafetariaModel':
      label: 'CafetariaModel'
      type: 'boolean'
    'articlesInCurrentContract':
      type: 'array'
      validation: ''
    'creationDate':
      defaultValue: 'now'
      label: 'creation date'
      validation:
        -
          type: 'DateTimeRange'
          options:
            earliestDate: 20130101
            latestDate: 20200101
    'createdBy':
      defaultValue: 'currentUser'
      label: 'Created by'
      type: 'Beech\Party\Domain\Model\Person'
    'modification':
      items:
        'modificationDate':
          defaultValue: 'now'
          label: 'Modification date'
          validation:
            -
              type: 'DateTimeRange'
              options:
                earliestDate: 20130101
                latestDate: 20200101
        'modifiedBy':
          defaultValue: 'currentUser'
          label: 'Modified by'
          type: 'Beech\Party\Domain\Model\Person'
      label: 'Modification log'
      type: 'array'
